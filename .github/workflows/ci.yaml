name: CI

on:
  push:
    branches: [ "main", "feature/**" ]
    paths:
      - '**.go'
      - '**.mod'
      - '**.sum'
      - 'charts/**'
      - 'cmd/**'
      - 'pkg/**'
      - '.github/workflows/ci.yml'
  pull_request:
    branches: [ "main", "feature/**" ]
    paths:
      - '**.go'
      - '**.mod'
      - '**.sum'
      - 'charts/**'
      - 'cmd/**'
      - 'pkg/**'
      - '.github/workflows/ci.yml'

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.2'

      - name: Prepare envtest via Makefile
        run: |
          make envtest
          # Ensure ./bin (and its subdirs) are on PATH
          echo "${{ github.workspace }}/bin:$(pwd)/bin/k8s/*" >> $GITHUB_PATH

      - name: Set version
        id: vars
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            APP_VERSION=${VERSION}
            DOCKER_TAG=${VERSION}
          else
            SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-8)
            VERSION="0.1.0+${GITHUB_SHA}"
            APP_VERSION=${GITHUB_SHA}
            DOCKER_TAG="0.1.0-${SHORT_SHA}"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "app_version=$APP_VERSION" >> $GITHUB_OUTPUT
          echo "docker_tag=$DOCKER_TAG" >> $GITHUB_OUTPUT

      - name: Build
        run: make build

      - name: Test
        run: make test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t ghcr.io/${{ github.repository }}/app:${{ steps.vars.outputs.docker_tag }} .

      - name: Trivy Scan
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ghcr.io/${{ github.repository }}/app:${{ steps.vars.outputs.docker_tag }}

      - name: Push Docker image
        run: docker push ghcr.io/${{ github.repository }}/app:${{ steps.vars.outputs.docker_tag }}

      - name: Package Helm chart
        run: |
          helm package charts/app --version ${{ steps.vars.outputs.version }} --app-version ${{ steps.vars.outputs.app_version }}
          mkdir -p chart-artifacts
          mv app-${{ steps.vars.outputs.version }}.tgz chart-artifacts/
  
      - name: Upload Helm chart artifact
        uses: actions/upload-artifact@v4
        with:
          name: helm-chart
          path: chart-artifacts/

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    defaults:
      run:
        working-directory: ./k8s-controller
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.2'
      - name: Extract version
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      - name: Build release binaries
        run: |
          mkdir -p release
          VERSION="${{ steps.version.outputs.VERSION }}"
          for os in linux; do
            for arch in amd64 arm64; do
              ext=''
              GOOS=$os GOARCH=$arch go build \
                -ldflags "-s -w -X main.version=$VERSION" \
                -o release/${{ env.BINARY_NAME }}-${os}-${arch}${ext} \
                main.go
            done
          done
          (cd release && sha256sum * > checksums.txt)
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release/*
            chart-artifacts/app-${{ steps.version.outputs.VERSION }}.tgz
          body: |
            ## k8s-controller ${{ steps.version.outputs.VERSION }}
            - Cross-compiled binaries for Linux
            - Checksums  
            - Helm chart version ${{ steps.version.outputs.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}